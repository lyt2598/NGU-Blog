<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 导入mysql连接外部配置文件，需要加载多个配置文件需要设置ignore-unresolvable为 true -->
	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" />

	<mvc:annotation-driven validator="myValidator">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 处理静态资源 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/html/" mapping="/html/**" />
	<mvc:resources location="/editor/" mapping="/editor/**" />
	<!-- 自定义拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截所有请求 -->
			<mvc:mapping path="/**/*" />
			<!-- 不用拦截的资源，一般静态资源不用拦截 -->
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/img/**" />
			<mvc:exclude-mapping path="/html/**" />
			<!-- 发表东西时不进行拦截 -->
			<mvc:exclude-mapping path="/publish/**" />
			<mvc:exclude-mapping path="/userInfo/**" />
			<!-- 拦截请求，加载头部菜单 -->
			<bean
				class="com.liaoyingtai.blog.controller.interceptor.MyHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 配置校验器 -->
	<bean id="myValidator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="validationMessageSource" />
	</bean>
	<!-- 导入校验器资源文件 -->
	<bean id="validationMessageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:validator/userInfo</value>
				<value>classpath:validator/learningNotes</value>
			</list>
		</property>
	</bean>

	<!-- 配置全局异常处理 -->
	<!-- 使用注解来配置异常处理器 -->
	<!-- <bean class="com.liaoyingtai.blog.controller.exception.MyExceptionResolver" 
		/> -->

	<!-- 配置component所在的包，自动加载需要管理的Bean -->
	<context:component-scan base-package="com.liaoyingtai.blog.service" />
	<context:component-scan base-package="com.liaoyingtai.blog.controller" />

	<!-- 配置视图解析器 -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="suffix" value=".jsp" />
		<property name="prefix" value="/WEB-INF/page/" />
	</bean>

	<!-- 创建数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="url" value="${jdbc.url}" />
	</bean>
	<!-- 创建sqlSession工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>

	<!-- 配置事物管理 -->
	<bean id="transcationManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事物处理方法 -->
	<tx:advice id="myAdivice" transaction-manager="transcationManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut expression="execution(* com.liaoyingtai.blog.service..*(..))"
			id="myPointcut"></aop:pointcut>
		<aop:advisor advice-ref="myAdivice" pointcut-ref="myPointcut" />
	</aop:config>
	<!-- 配置mybatis mapper映射配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.liaoyingtai.blog.dao.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 配置文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置最大上传大小为2M -->
		<property name="maxUploadSize" value="2097152" />
	</bean>
</beans> 